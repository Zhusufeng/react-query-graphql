import Head from "next/head";
import { useQuery } from "@tanstack/react-query";

export default function Home() {
  // Query Function
  const getPeople = async () => {
    try {
      const response = await fetch("https://swapi.dev/api/people");
      // fetch does not throw errors by default
      if (!response.ok) {
        throw new Error("Network response was not ok");
      }
      const data = await response.json();
      return data;
    } catch (error) {
      // Must throw an error to trigger the error state in React Query
      throw new Error("Error fetching data");
    }
  };

  // RESTful Query
  const { isPending, isError, data, error } = useQuery({
    queryKey: ["people"],
    queryFn: getPeople,
  });

  if (isPending) {
    return <span>Loading...</span>;
  }

  if (isError) {
    return <span>Error: {error.message}</span>;
  }

  return (
    <>
      <Head>
        <title>React Query with RESTful Request</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ul>
        {data?.results.map((people: { name: string }) => (
          <li key={people.name}>{people.name}</li>
        ))}
      </ul>
    </>
  );
}
