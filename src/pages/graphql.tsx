import Head from "next/head";
import { useQuery } from "@tanstack/react-query";
import { request } from "graphql-request";

// Imported GraphQL Document for typing
import { graphql } from "../gql";

export default function GraphQLFilms() {
  // GraphQL Query
  const allFilmsWithVariablesQueryDocument = graphql(`
    query allFilmsWithVariablesQuery($first: Int!) {
      allFilms(first: $first) {
        edges {
          node {
            id
            title
          }
        }
      }
    }
  `);

  // React Query for GraphQL Request
  const { isPending, isError, data, error } = useQuery({
    queryKey: ["graphQLFilms"],
    queryFn: async () =>
      request(
        "https://swapi-graphql.netlify.app/.netlify/functions/index",
        allFilmsWithVariablesQueryDocument,
        // variables are type-checked too!
        { first: 10 }
      ),
  });

  if (isPending) {
    return <span>Loading...</span>;
  }

  if (isError) {
    return <span>Error: {error.message}</span>;
  }

  return (
    <>
      <Head>
        <title>React Query for GraphQL Request</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>React Query for GraphQL Request</h1>
      {data && (
        <ul>
          {data.allFilms?.edges?.map(
            (e) => e?.node && <li key={`film-${e.node.id}`}>{e.node.title}</li>
          )}
        </ul>
      )}
    </>
  );
}
